[
  {
    "id": "ios-interview",
    "title": "iOS Technical Interview",
    "icon": "üì±",
    "description": "Generate comprehensive, production-grade answers to iOS technical interview questions with MAANG-level rigor.",
    "template": "You are a Principal iOS Architect and MAANG bar‚Äëraiser interviewer.\nYour job is to deliver an exhaustive, production‚Äëgrade answer that a top technical recruiter would score 15/10.\n\n‚Äî Output rules ‚Äî\n‚Ä¢ Output ONLY the sections in the \"Answer Format\" below (use the exact headings and order).\n‚Ä¢ Start immediately with # Signpost (no preamble, no restatement of the question).\n‚Ä¢ Be surgical and senior‚Äëminded: verbs first, concrete nouns, no filler, no purple prose.\n‚Ä¢ If ambiguous, make one pragmatic assumption and state it in the Assumptions line under the Signpost (one line max).\n‚Ä¢ Bullets: keep them tight (‚â§ 1 line each where possible). Prefer numbers over adjectives.\n‚Ä¢ Use American English and modern Swift 6 idioms.\n\n‚Äî My profile (use to tailor examples & STAR story) ‚Äî\n‚Ä¢ Experience: {{experience}} years iOS\n‚Ä¢ Architecture comfort: {{architecture}}; can pivot to TCA/Clean\n‚Ä¢ Strength accents: Instruments/MetricKit, XCTest/XCUITest, async/await, URLSession, Core Data/SwiftData, Keychain\n‚Ä¢ Prefer Swift concurrency (async/await) over Combine unless asked\n‚Ä¢ Platform baseline variable: {IOS_BASELINE := \"{{iosBaseline}}\"}\n‚Ä¢ Company target: MAANG‚Äëlevel rigor\n\n‚Äî Style & content requirements ‚Äî\n‚Ä¢ Name lifecycle/threading/memory mechanics; call out trade‚Äëoffs and credible alternatives.\n‚Ä¢ Swift code MUST compile conceptually: include imports; safe error handling; DI seams; ‚â§ 25 lines.\n‚Ä¢ Include concrete tools (Instruments views, LLDB snippets, os_log/signpost, MetricKit).\n‚Ä¢ Security/privacy: mention relevant risks & mitigations succinctly.\n‚Ä¢ Numbers beat adjectives. If real metrics aren't provided, mark STAR metrics as \"illustrative\".\n‚Ä¢ Prefer modern APIs: async/await, actors, URLSession, BGTaskScheduler, SwiftData/Core Data, modern Keychain usage, App Transport Security, App Attest when relevant.\n‚Ä¢ If algorithms/DS: include complexity, invariants, and (where apt) a brief correctness sketch.\n‚Ä¢ If system design: cover data flow, failure modes, backpressure, offline, observability, scaling knobs, idempotency, and SLO/SLA considerations.\n\n‚Äî Depth toggle ‚Äî\n{DEPTH := \"{{depth}}\"} // options: quick | standard | deep\n‚Ä¢ quick: one sentence per section; code ‚â§ 12 lines.\n‚Ä¢ standard: 2‚Äì4 bullets per section; code ‚â§ 18 lines.\n‚Ä¢ deep: fuller detail; code ‚â§ 25 lines.\n\n‚Äî Topic ‚Äî\n{QUESTION := \"{{question}}\"}\n‚Ä¢ Keep the format even for algorithms/system design; tune sections as needed.\n\n‚Äî Answer Format (produce exactly these sections with # headers) ‚Äî\n\n# Signpost\nOne sentence on what you'll cover.\nAssumptions: <state assumptions if any, else \"None\">.\n\n# One‚Äëliner (Definition + Context)\n<crisp definition and where it fits in the iOS stack; name primary frameworks/components>\n\n# Why it matters (Impact)\n‚Ä¢ User/business impact (with metrics if possible)\n‚Ä¢ Engineering impact (quality, velocity, cost)\n\n# How it works (Mechanics)\n‚Ä¢ Key principles (threads/lifecycle/memory/concurrency)\n‚Ä¢ Data/lifecycle flow (source ‚Üí transform ‚Üí sink)\n‚Ä¢ Invariants/constraints (e.g., idempotency, ordering, consistency)\n\n# APIs & Idioms\n‚Ä¢ Core types/functions (include key signatures)\n‚Ä¢ Swift idioms (value semantics, DI seams, async patterns)\n‚Ä¢ Platform specifics (entitlements, Info.plist keys, background modes) when relevant\n‚Ä¢ LLDB one‚Äëliner for the topic (e.g., expr -l Swift -- ...) if debugging is pertinent\n\n# Mini Example (Swift, compile‚Äëready, ‚â§25 lines)\n<10‚Äì25 lines showing the canonical pattern; include imports; safe error handling; DI seam; modern concurrency>\n\n# Edge cases & Pitfalls\n‚Ä¢ <race conditions / reentrancy / retain cycles / timeouts / offline / migrations / partial failure>\n‚Ä¢ Guard rails (specific techniques: timeouts, retries with jitter, cancellation, idempotency keys, schema gates)\n\n# Performance & Complexity\n‚Ä¢ Time/space/battery considerations; complexity if algorithms\n‚Ä¢ Concrete knobs (batching, caching policy, QoS/priority, prefetch, backpressure)\n‚Ä¢ Tools: Instruments views & what to inspect (Time Profiler, Allocations, Leaks, Energy, Network, Counters)\n\n# Concurrency & Memory\n‚Ä¢ Isolation (actors/@MainActor), Sendable, reentrancy notes\n‚Ä¢ ARC/COW implications (struct vs class, captured refs, escape analysis)\n‚Ä¢ Cancellation propagation and priority inversion avoidance\n\n# Testing & Observability\n‚Ä¢ Unit/integration/UI strategy (XCTest/XCUITest), fakes/mocks, URLProtocol, deterministic clocks\n‚Ä¢ Flakiness control (idempotent setup/teardown, timeouts, runloop draining)\n‚Ä¢ Observability: os_log/signposts (categories, subsystems), MetricKit (MXCrashDiagnostic/MXTaskMetrics), crash symbolication\n\n# Security & Privacy\n‚Ä¢ Data risks; Keychain (kSecAttrAccessible‚Ä¶), Secure Enclave, ATS, App Attest/DeviceCheck where applicable\n‚Ä¢ Permissions timing & copy; data minimization/retention; PII boundaries\n\n# Architecture & Trade‚Äëoffs\n‚Ä¢ Placement in MVVM (and when to switch to TCA/Clean/VIPER)\n‚Ä¢ Alternatives and when they win; SPM module boundaries; API surface & seam placement\n\n# Production Story (STAR, 30‚Äì45s)\nSituation/Task, Action, Result (with metrics; mark as illustrative if not real), Next steps.\n\n# Wrap‚Äëup (Rules‚Äëof‚Äëthumb)\n‚Ä¢ When to use\n‚Ä¢ When to avoid\n‚Ä¢ Handy heuristics\n\n‚Äî Additional micro‚Äërules (quietly enforce quality) ‚Äî\n‚Ä¢ Prefer structured concurrency to manual thread hops; annotate with @MainActor where UI is touched.\n‚Ä¢ Show at least one DI point (protocol or initializer injection).\n‚Ä¢ Use os_signpost for critical paths and name intervals meaningfully.\n‚Ä¢ When networking, mention retries with exponential backoff + jitter, request‚Äëlevel timeouts, and idempotency for unsafe verbs.\n‚Ä¢ When persistence, mention model versioning/migration (Lightweight/Custom), background contexts, and merge policies.\n‚Ä¢ When background work, reference BGTaskScheduler with constraints and watchdog behavior.\n‚Ä¢ Avoid deprecated or legacy APIs unless comparing trade‚Äëoffs explicitly.\n‚Ä¢ Keep examples framework‚Äëagnostic unless the question mandates SwiftUI/UIKit specifics; if SwiftUI, call out lifecycle differences vs UIKit.\n‚Ä¢ If uncertain data is required, state \"illustrative\" and proceed with rational defaults.",
    "fields": [
      {"key": "question", "label": "Interview Question", "type": "textarea", "required": true, "placeholder": "e.g., Explain how URLSession works and how you'd implement a robust networking layer"},
      {"key": "experience", "label": "Years of iOS Experience", "type": "select", "options": ["1-2", "3-4", "5-6", "7-8", "9-10", "11-15", "15+"], "required": true},
      {"key": "architecture", "label": "Preferred Architecture", "type": "select", "options": ["MVVM + DI", "MVC", "VIPER", "TCA", "Clean Architecture"], "required": true},
      {"key": "depth", "label": "Answer Depth", "type": "select", "options": ["quick", "standard", "deep"], "required": true},
      {"key": "iosBaseline", "label": "iOS Baseline", "type": "select", "options": ["current iOS + Swift 6 where applicable", "iOS 17+ Swift 5.9+", "iOS 16+ Swift 5.7+", "iOS 15+ Swift 5.5+"], "required": true}
    ],
    "tags": ["ios", "interview", "technical", "maang"]
  },
  {
    "id": "blog-outline",
    "title": "Blog Outline",
    "icon": "üìù",
    "description": "Create a structured blog outline for your content.",
    "template": "Create a detailed blog outline about {{topic}} for {{audience}} with a {{tone}} tone. Include {{sections}} sections and key takeaways.",
    "fields": [
      {"key": "topic", "label": "Topic", "type": "text", "required": true, "placeholder": "e.g., SwiftUI performance"},
      {"key": "audience", "label": "Audience", "type": "text", "required": true, "placeholder": "e.g., iOS developers"},
      {"key": "tone", "label": "Tone", "type": "select", "options": ["Professional", "Friendly", "Technical"], "required": true},
      {"key": "sections", "label": "Number of Sections", "type": "number", "min": 3, "max": 10, "required": true}
    ],
    "tags": ["writing", "content"]
  },
  {
    "id": "code-review",
    "title": "Code Review",
    "icon": "üíª",
    "description": "Ask for a structured code review.",
    "template": "Review the following {{language}} code for {{focus}}. Be specific about {{constraints}}.\n\nCode:\n\n{{code}}",
    "fields": [
      {"key": "language", "label": "Language", "type": "select", "options": ["Swift", "Kotlin", "TypeScript", "Python", "JavaScript", "Java", "C#"], "required": true},
      {"key": "focus", "label": "Focus Areas", "type": "text", "placeholder": "e.g., performance, readability", "required": true},
      {"key": "constraints", "label": "Constraints", "type": "text", "placeholder": "e.g., iOS 16 minimum"},
      {"key": "code", "label": "Code", "type": "textarea", "required": true}
    ],
    "tags": ["dev", "review"]
  },
  {
    "id": "marketing-ad",
    "title": "Marketing Ad Copy",
    "icon": "üì£",
    "description": "Generate compelling marketing ad copy.",
    "template": "Create a {{adType}} ad for {{product}} targeting {{audience}}. The tone should be {{tone}} and highlight {{benefits}}. Include a strong call-to-action.",
    "fields": [
      {"key": "product", "label": "Product/Service", "type": "text", "required": true, "placeholder": "e.g., Project management app"},
      {"key": "audience", "label": "Target Audience", "type": "text", "required": true, "placeholder": "e.g., Small business owners"},
      {"key": "adType", "label": "Ad Type", "type": "select", "options": ["Social Media", "Email", "Banner", "Video Script"], "required": true},
      {"key": "tone", "label": "Tone", "type": "select", "options": ["Urgent", "Friendly", "Professional", "Playful"], "required": true},
      {"key": "benefits", "label": "Key Benefits", "type": "text", "required": true, "placeholder": "e.g., saves time, increases productivity"}
    ],
    "tags": ["marketing", "advertising"]
  },
  {
    "id": "press-release",
    "title": "Press Release",
    "icon": "üóûÔ∏è",
    "description": "Draft a professional press release.",
    "template": "FOR IMMEDIATE RELEASE\n\n{{headline}}\n\n{{location}}, {{date}} - {{company}} announces {{announcement}}. {{details}}\n\n{{quote}}\n\nAbout {{company}}: {{companyDescription}}\n\nContact: {{contact}}",
    "fields": [
      {"key": "headline", "label": "Headline", "type": "text", "required": true, "placeholder": "e.g., Company X Launches Revolutionary AI Tool"},
      {"key": "company", "label": "Company Name", "type": "text", "required": true},
      {"key": "location", "label": "Location", "type": "text", "required": true, "placeholder": "e.g., San Francisco, CA"},
      {"key": "date", "label": "Date", "type": "text", "required": true, "placeholder": "e.g., March 15, 2024"},
      {"key": "announcement", "label": "Main Announcement", "type": "text", "required": true, "placeholder": "e.g., the launch of their new AI platform"},
      {"key": "details", "label": "Details", "type": "textarea", "required": true, "placeholder": "Provide more context and details"},
      {"key": "quote", "label": "Executive Quote", "type": "textarea", "required": true, "placeholder": "Quote from CEO or spokesperson"},
      {"key": "companyDescription", "label": "Company Description", "type": "textarea", "required": true},
      {"key": "contact", "label": "Contact Information", "type": "text", "required": true}
    ],
    "tags": ["pr", "news"]
  },
  {
    "id": "lesson-plan",
    "title": "Lesson Plan",
    "icon": "üéì",
    "description": "Create a structured lesson plan.",
    "template": "Lesson Plan: {{subject}}\nGrade Level: {{gradeLevel}}\nDuration: {{duration}} minutes\n\nObjectives:\n{{objectives}}\n\nMaterials:\n{{materials}}\n\nActivities:\n{{activities}}\n\nAssessment:\n{{assessment}}",
    "fields": [
      {"key": "subject", "label": "Subject", "type": "text", "required": true, "placeholder": "e.g., Introduction to Fractions"},
      {"key": "gradeLevel", "label": "Grade Level", "type": "text", "required": true, "placeholder": "e.g., 4th Grade"},
      {"key": "duration", "label": "Duration (minutes)", "type": "number", "min": 15, "max": 180, "required": true},
      {"key": "objectives", "label": "Learning Objectives", "type": "textarea", "required": true, "placeholder": "What students will learn"},
      {"key": "materials", "label": "Materials Needed", "type": "textarea", "required": true, "placeholder": "List required materials"},
      {"key": "activities", "label": "Activities", "type": "textarea", "required": true, "placeholder": "Describe lesson activities"},
      {"key": "assessment", "label": "Assessment Method", "type": "textarea", "required": true, "placeholder": "How will you assess learning?"}
    ],
    "tags": ["education", "teaching"]
  },
  {
    "id": "test-cases",
    "title": "Test Case Generator",
    "icon": "üß™",
    "description": "Generate comprehensive test cases.",
    "template": "Test Cases for {{feature}}\n\nTest Scenario: {{scenario}}\nPlatform: {{platform}}\nPriority: {{priority}}\n\nPositive Test Cases:\n{{positiveTests}}\n\nNegative Test Cases:\n{{negativeTests}}\n\nEdge Cases:\n{{edgeCases}}",
    "fields": [
      {"key": "feature", "label": "Feature/Function", "type": "text", "required": true, "placeholder": "e.g., User Login"},
      {"key": "scenario", "label": "Test Scenario", "type": "text", "required": true, "placeholder": "e.g., User authentication flow"},
      {"key": "platform", "label": "Platform", "type": "select", "options": ["Web", "Mobile", "Desktop", "API"], "required": true},
      {"key": "priority", "label": "Priority", "type": "select", "options": ["High", "Medium", "Low"], "required": true},
      {"key": "positiveTests", "label": "Positive Test Cases", "type": "textarea", "required": true, "placeholder": "Valid input scenarios"},
      {"key": "negativeTests", "label": "Negative Test Cases", "type": "textarea", "required": true, "placeholder": "Invalid input scenarios"},
      {"key": "edgeCases", "label": "Edge Cases", "type": "textarea", "required": true, "placeholder": "Boundary conditions"}
    ],
    "tags": ["testing", "qa"]
  }
]
